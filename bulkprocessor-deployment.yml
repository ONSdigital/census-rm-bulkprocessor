apiVersion: apps/v1
kind: Deployment
metadata:
  name: bulkprocessor
  labels:
    app: bulkprocessor
    env: dev
spec:
  selector:
    matchLabels:
      app: bulkprocessor
      env: dev
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: bulkprocessor
      labels:
        app: bulkprocessor
        env: dev
    spec:
      volumes:
        - name: cloud-sql-certs
          secret:
            secretName: cloud-sql-jdbc-certs
            defaultMode: 0444
            items:
              - key: "root.crt"
                path: "root.crt"
              - key: "postgresql.crt"
                path: "postgresql.crt"
              - key: "postgresql.pk8"
                path: "postgresql.pk8"
      containers:
        - name: bulkprocessor
          image: eu.gcr.io/census-rm-ci/rm/census-rm-bulkprocessor:latest
          volumeMounts:
            - name: cloud-sql-certs
              mountPath: "/home/bulkprocessor/.postgresql"
              readOnly: true
          resources:
            requests:
              cpu: "1000m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "512Mi"
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /actuator/health/
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          ports:
            - name: http-server
              containerPort: 8080
          env:
            - name: IAP_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: iap-audiences
                  key: bulkprocessor
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: db-host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: db-port
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: db-name
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-username
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=verify-ca"
            - name: SPRING_DATASOURCE_USERNAME
              value: $(DB_USERNAME)
            - name: SPRING_DATASOURCE_PASSWORD
              value: $(DB_PASSWORD)
            - name: SPRING_RABBITMQ_HOST
              value: "rm-rabbitmq"
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: CASEAPI_CONNECTION_HOST
              value: "case-api"
            - name: CASEAPI_CONNECTION_PORT
              value: "80"
